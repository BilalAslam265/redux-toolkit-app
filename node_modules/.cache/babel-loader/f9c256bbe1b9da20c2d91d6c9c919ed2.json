{"ast":null,"code":"const {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\n\nconst STATUSES = Object.freeze({\n  IDLE: \"idle\",\n  ERROR: \"error\",\n  LOADING: \"loading\"\n});\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState: {\n    data: [],\n    status: STATUSES.IDLE\n  },\n  reducers: {\n    setProducts(state, action) {\n      state.data = action.payload;\n    },\n\n    setStatus(state, action) {\n      state.status = action.payload;\n    }\n\n  }\n});\nexport const {\n  setProducts,\n  setStatus\n} = productSlice.actions;\nexport default productSlice.reducer; // Thunks\n\nexport function fetchProducts() {\n  return async function fetchProductsThunk(dispatch, getState) {\n    // getState is used to get any current state from store and use as a parameter in thunk\n    dispatch(setStatus(STATUSES.LOADING));\n\n    try {\n      const response = await fetch('https://fakestoreapi.com/products');\n      const data = await response.json();\n      dispatch(setProducts(data));\n      dispatch(setStatus(STATUSES.IDLE));\n    } catch (error) {\n      console.log(error);\n      dispatch(setStatus(STATUSES.ERROR));\n    }\n  };\n}","map":{"version":3,"names":["createSlice","require","STATUSES","Object","freeze","IDLE","ERROR","LOADING","productSlice","name","initialState","data","status","reducers","setProducts","state","action","payload","setStatus","actions","reducer","fetchProducts","fetchProductsThunk","dispatch","getState","response","fetch","json","error","console","log"],"sources":["/home/bilal/redux/src/store/productSlice.js"],"sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\")\n\nconst STATUSES = Object.freeze({\n    IDLE: \"idle\",\n    ERROR: \"error\",\n    LOADING: \"loading\",\n})\n\nconst productSlice = createSlice({\n    name: \"product\",\n    initialState : {\n        data: [],\n        status: STATUSES.IDLE\n    },\n\n    reducers: {\n        setProducts(state, action){\n            state.data = action.payload\n        },\n        setStatus(state, action){\n            state.status = action.payload\n        },\n    }\n})\n\nexport const {setProducts, setStatus} = productSlice.actions;\nexport default productSlice.reducer;\n\n// Thunks\nexport function fetchProducts(){\n    return async function fetchProductsThunk(dispatch, getState){\n        // getState is used to get any current state from store and use as a parameter in thunk\n        dispatch(setStatus(STATUSES.LOADING))\n        try {\n            const response = await fetch('https://fakestoreapi.com/products')\n            const data = await response.json()\n            dispatch((setProducts(data)))\n            dispatch(setStatus(STATUSES.IDLE))\n        } catch (error) {\n            console.log(error);\n            dispatch(setStatus(STATUSES.ERROR))\n        }\n    }\n}"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAkBC,OAAO,CAAC,kBAAD,CAA/B;;AAEA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc;EAC3BC,IAAI,EAAE,MADqB;EAE3BC,KAAK,EAAE,OAFoB;EAG3BC,OAAO,EAAE;AAHkB,CAAd,CAAjB;AAMA,MAAMC,YAAY,GAAGR,WAAW,CAAC;EAC7BS,IAAI,EAAE,SADuB;EAE7BC,YAAY,EAAG;IACXC,IAAI,EAAE,EADK;IAEXC,MAAM,EAAEV,QAAQ,CAACG;EAFN,CAFc;EAO7BQ,QAAQ,EAAE;IACNC,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAe;MACtBD,KAAK,CAACJ,IAAN,GAAaK,MAAM,CAACC,OAApB;IACH,CAHK;;IAINC,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAe;MACpBD,KAAK,CAACH,MAAN,GAAeI,MAAM,CAACC,OAAtB;IACH;;EANK;AAPmB,CAAD,CAAhC;AAiBA,OAAO,MAAM;EAACH,WAAD;EAAcI;AAAd,IAA2BV,YAAY,CAACW,OAA9C;AACP,eAAeX,YAAY,CAACY,OAA5B,C,CAEA;;AACA,OAAO,SAASC,aAAT,GAAwB;EAC3B,OAAO,eAAeC,kBAAf,CAAkCC,QAAlC,EAA4CC,QAA5C,EAAqD;IACxD;IACAD,QAAQ,CAACL,SAAS,CAAChB,QAAQ,CAACK,OAAV,CAAV,CAAR;;IACA,IAAI;MACA,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAA5B;MACA,MAAMf,IAAI,GAAG,MAAMc,QAAQ,CAACE,IAAT,EAAnB;MACAJ,QAAQ,CAAET,WAAW,CAACH,IAAD,CAAb,CAAR;MACAY,QAAQ,CAACL,SAAS,CAAChB,QAAQ,CAACG,IAAV,CAAV,CAAR;IACH,CALD,CAKE,OAAOuB,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACAL,QAAQ,CAACL,SAAS,CAAChB,QAAQ,CAACI,KAAV,CAAV,CAAR;IACH;EACJ,CAZD;AAaH"},"metadata":{},"sourceType":"module"}